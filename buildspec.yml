version: 0.2
phases:
  install:
    commands:
      - echo Installing Java 21....
      - sudo yum install -y java-21-amazon-corretto-devel # Installe Java 21
      - sudo alternatives --config java <<< '1' # Définit Java 21 comme version par défaut
      - java -version # Vérifie que Java 21 est bien utilisé
  pre_build:
    commands:
      - echo Setting JAVA_HOME for Maven...
      - export JAVA_HOME=/usr/lib/jvm/java-21-amazon-corretto # Définit JAVA_HOME pour Maven
      - export PATH=$JAVA_HOME/bin:$PATH # Met à jour le PATH pour inclure Java 21
      - mvn clean install -DskipTests # Compile le projet avec Maven
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  build:
    commands:
      - echo Building Docker image...
      - docker build -t javaservice . # Construit l'image Docker
      - docker tag javaservice:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/javaservice:latest
  post_build:
    commands:
      - echo Pushing Docker image to Amazon ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/javaservice:latest # Pousse l'image dans ECR
      - echo Writing image details to imagedefinitions.json...
      - printf '[{"name":"javaservice","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/javaservice:latest > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
